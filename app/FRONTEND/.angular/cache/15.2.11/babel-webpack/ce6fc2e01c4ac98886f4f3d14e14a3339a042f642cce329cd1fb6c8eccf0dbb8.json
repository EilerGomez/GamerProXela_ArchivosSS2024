{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Cliente } from 'src/app/Modelo/Cliente';\nlet ClientesComponent = class ClientesComponent {\n  constructor(servicioClientes) {\n    this.servicioClientes = servicioClientes;\n    this.mostrarNuevoCliente = false;\n  }\n  ngOnInit() {\n    this.servicioClientes.getClientes(this.getRolDB()).subscribe(data => {\n      this.clientes = data;\n      this.clientesT = data;\n    }, error => {\n      console.log(error);\n    });\n  }\n  crearNuevoCliente(nuevoClienteForm) {\n    let c = new Cliente(1, this.nombreCliente, this.telefonoCLiente, this.nitCliente);\n  }\n  NuevoCliente() {\n    this.mostrarNuevoCliente = true;\n  }\n  searchProducto(clave) {\n    this.clientes = clave === \"\" ? this.clientesT : this.buscarClientes(clave, this.clientesT);\n  }\n  buscarClientes(clave, clientes) {\n    const claveNormalizada = clave.toLowerCase();\n    return clientes.filter(cliente => {\n      return cliente.identificacion.toString().includes(claveNormalizada) || cliente.nombre.toLowerCase().includes(claveNormalizada) || cliente.nit.toLowerCase().includes(claveNormalizada) || cliente.telefono.toString().includes(claveNormalizada);\n    });\n  }\n  getRolDB() {\n    let stringUser = localStorage.getItem('usuario');\n    let usuario = stringUser ? JSON.parse(stringUser) : null;\n    let rol = usuario ? usuario.rol : 0;\n    return rol;\n  }\n};\nClientesComponent = __decorate([Component({\n  selector: 'app-clientes',\n  templateUrl: './clientes.component.html',\n  styleUrls: ['./clientes.component.css']\n})], ClientesComponent);\nexport { ClientesComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,OAAO,QAAQ,wBAAwB;AAUzC,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAC5BC,YAAoBC,gBAAgC;IAAhC,qBAAgB,GAAhBA,gBAAgB;IACpC,wBAAmB,GAAS,KAAK;EADqB;EAUtDC,QAAQ;IACN,IAAI,CAACD,gBAAgB,CAACE,WAAW,CAAC,IAAI,CAACC,QAAQ,EAAE,CAAC,CAACC,SAAS,CAACC,IAAI,IAAE;MACjE,IAAI,CAACC,QAAQ,GAACD,IAAI;MAClB,IAAI,CAACE,SAAS,GAACF,IAAI;IACrB,CAAC,EAAEG,KAAK,IAAE;MACRC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EACJ;EACAG,iBAAiB,CAACC,gBAAuB;IACvC,IAAIC,CAAC,GAAG,IAAIhB,OAAO,CAAC,CAAC,EAAC,IAAI,CAACiB,aAAa,EAAC,IAAI,CAACC,eAAe,EAAC,IAAI,CAACC,UAAU,CAAC;EAChF;EACAC,YAAY;IACV,IAAI,CAACC,mBAAmB,GAAC,IAAI;EAC/B;EAEAC,cAAc,CAACC,KAAa;IAC1B,IAAI,CAACd,QAAQ,GAAGc,KAAK,KAAK,EAAE,GAAG,IAAI,CAACb,SAAS,GAAG,IAAI,CAACc,cAAc,CAACD,KAAK,EAAE,IAAI,CAACb,SAAS,CAAC;EAC5F;EAGAc,cAAc,CAACD,KAAa,EAAEd,QAAmB;IAC/C,MAAMgB,gBAAgB,GAAGF,KAAK,CAACG,WAAW,EAAE;IAE5C,OAAOjB,QAAQ,CAACkB,MAAM,CAACC,OAAO,IAAG;MAC/B,OACEA,OAAO,CAACC,cAAc,CAACC,QAAQ,EAAE,CAACC,QAAQ,CAACN,gBAAgB,CAAC,IAC5DG,OAAO,CAACI,MAAM,CAACN,WAAW,EAAE,CAACK,QAAQ,CAACN,gBAAgB,CAAC,IACvDG,OAAO,CAACK,GAAG,CAACP,WAAW,EAAE,CAACK,QAAQ,CAACN,gBAAgB,CAAC,IACpDG,OAAO,CAACM,QAAQ,CAACJ,QAAQ,EAAE,CAACC,QAAQ,CAACN,gBAAgB,CAAC;IAE1D,CAAC,CAAC;EACJ;EAEAnB,QAAQ;IACN,IAAI6B,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;IAChD,IAAIC,OAAO,GAAWH,UAAU,GAAEI,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC,GAAC,IAAI;IAC7D,IAAIM,GAAG,GAAGH,OAAO,GAAEA,OAAO,CAACG,GAAG,GAAC,CAAC;IAChC,OAAOA,GAAG;EACZ;CACD;AAlDYxC,iBAAiB,eAL7BF,SAAS,CAAC;EACT2C,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,GACW3C,iBAAiB,CAkD7B;SAlDYA,iBAAiB","names":["Component","Cliente","ClientesComponent","constructor","servicioClientes","ngOnInit","getClientes","getRolDB","subscribe","data","clientes","clientesT","error","console","log","crearNuevoCliente","nuevoClienteForm","c","nombreCliente","telefonoCLiente","nitCliente","NuevoCliente","mostrarNuevoCliente","searchProducto","clave","buscarClientes","claveNormalizada","toLowerCase","filter","cliente","identificacion","toString","includes","nombre","nit","telefono","stringUser","localStorage","getItem","usuario","JSON","parse","rol","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/eiler/Documentos/Universidad/SegundoSemestre2024/Archivos/Proyecto1/app/FRONTEND/src/app/area-cajero/clientes/clientes.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Cliente } from 'src/app/Modelo/Cliente';\nimport { ClientesService } from 'src/app/Service/clientes.service';\nimport { Usuario } from 'src/app/Modelo/Usuario';\nimport { data, error } from 'jquery';\nimport { NgForm } from '@angular/forms';\n@Component({\n  selector: 'app-clientes',\n  templateUrl: './clientes.component.html',\n  styleUrls: ['./clientes.component.css']\n})\nexport class ClientesComponent {\n  constructor(private servicioClientes:ClientesService){}\n  mostrarNuevoCliente:boolean=false;\n  clientes!:Cliente[]\n  clientesT!:Cliente[]\n  claveBusqueda!:string\n\n  nombreCliente!:string\n  telefonoCLiente!:number\n  nitCliente!:string\n\n  ngOnInit():void{\n    this.servicioClientes.getClientes(this.getRolDB()).subscribe(data=>{\n      this.clientes=data;\n      this.clientesT=data;\n    }, error=>{\n      console.log(error)\n    })\n  }\n  crearNuevoCliente(nuevoClienteForm:NgForm){\n    let c = new Cliente(1,this.nombreCliente,this.telefonoCLiente,this.nitCliente);\n  }\n  NuevoCliente(){\n    this.mostrarNuevoCliente=true\n  }\n\n  searchProducto(clave: string) {\n    this.clientes = clave === \"\" ? this.clientesT : this.buscarClientes(clave, this.clientesT);\n  }\n  \n\n  buscarClientes(clave: string, clientes: Cliente[]): Cliente[] {\n    const claveNormalizada = clave.toLowerCase();\n    \n    return clientes.filter(cliente => {\n      return (\n        cliente.identificacion.toString().includes(claveNormalizada) || \n        cliente.nombre.toLowerCase().includes(claveNormalizada)||\n        cliente.nit.toLowerCase().includes(claveNormalizada)||\n        cliente.telefono.toString().includes(claveNormalizada)\n      );\n    });\n  }\n\n  getRolDB(){\n    let stringUser = localStorage.getItem('usuario');\n    let usuario:Usuario = stringUser? JSON.parse(stringUser):null;\n    let rol = usuario? usuario.rol:0;\n    return rol;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}