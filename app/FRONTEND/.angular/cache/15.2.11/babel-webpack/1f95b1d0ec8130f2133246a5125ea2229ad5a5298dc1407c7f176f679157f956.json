{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet SolicitudTarjetasComponent = class SolicitudTarjetasComponent {\n  constructor(servicioSolicitud, servicioTarjetas) {\n    this.servicioSolicitud = servicioSolicitud;\n    this.servicioTarjetas = servicioTarjetas;\n    this.mostrarAgregarNuevaSolicitud = false;\n  }\n  ngOnInit() {\n    this.servicioSolicitud.getSolicitudesTarjetas(this.getRolDB()).subscribe(data => {\n      this.solicitudes = data;\n      this.solicitudesT = data;\n      this.getTarjetasDescuento();\n    }, error => {\n      console.log(error);\n    });\n  }\n  getTarjetasDescuento() {\n    this.servicioTarjetas.getTarjetas(this.getRolDB()).subscribe(data => {\n      this.tarjetas = data;\n      this.tarjetasT = data;\n    }, error => {\n      console.log(error);\n    });\n  }\n  searchSolicitud(clave) {\n    this.solicitudes = clave === \"\" ? this.solicitudesT : this.buscarSolicitudes(clave, this.solicitudesT);\n  }\n  buscarSolicitudes(clave, st) {\n    const claveNormalizada = clave.toLowerCase();\n    return st.filter(s => {\n      return s.codigo.toString().toLowerCase().includes(claveNormalizada) || s.n_cliente.toLowerCase().includes(claveNormalizada);\n    });\n  }\n  getRolDB() {\n    let stringUser = localStorage.getItem('usuario');\n    let usuario = stringUser ? JSON.parse(stringUser) : null;\n    let rol = usuario ? usuario.rol : 0;\n    return rol;\n  }\n  searchTarjeta(clave) {\n    this.tarjetas = clave === \"\" ? this.tarjetasT : this.buscarTarjetas(clave, this.tarjetasT);\n  }\n  buscarTarjetas(clave, tr) {\n    const claveNormalizada = clave.toLowerCase();\n    return tr.filter(t => {\n      return t.codigo.toString().toLowerCase().includes(claveNormalizada) || t.tipo.toString().toLowerCase().includes(claveNormalizada) || t.cliente.toString().toLowerCase().includes(claveNormalizada) || t.n_cliente.toLowerCase().includes(claveNormalizada) || t.total_puntos.toString().toLowerCase().includes(claveNormalizada) || t.fecha_mod.toLowerCase().includes(claveNormalizada);\n    });\n  }\n  dejarDeMostrarNuevaSolicitud(nuevaSolicitudForm) {\n    nuevaSolicitudForm.resetForm();\n    this.mostrarAgregarNuevaSolicitud = false;\n  }\n  agregarSolicitud(form) {\n    //agregar solicitud\n    this.claveBusqueda = \"\";\n    form.resetForm();\n  }\n  mostrarNuevaSolicitud() {\n    this.mostrarAgregarNuevaSolicitud = true;\n    this.claveBusqueda = \"\";\n  }\n};\nSolicitudTarjetasComponent = __decorate([Component({\n  selector: 'app-solicitud-tarjetas',\n  templateUrl: './solicitud-tarjetas.component.html',\n  styleUrls: ['./solicitud-tarjetas.component.css']\n})], SolicitudTarjetasComponent);\nexport { SolicitudTarjetasComponent };","map":{"version":3,"mappings":"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","names":["Component","SolicitudTarjetasComponent","constructor","servicioSolicitud","servicioTarjetas","ngOnInit","getSolicitudesTarjetas","getRolDB","subscribe","data","solicitudes","solicitudesT","getTarjetasDescuento","error","console","log","getTarjetas","tarjetas","tarjetasT","searchSolicitud","clave","buscarSolicitudes","st","claveNormalizada","toLowerCase","filter","s","codigo","toString","includes","n_cliente","stringUser","localStorage","getItem","usuario","JSON","parse","rol","searchTarjeta","buscarTarjetas","tr","t","tipo","cliente","total_puntos","fecha_mod","dejarDeMostrarNuevaSolicitud","nuevaSolicitudForm","resetForm","mostrarAgregarNuevaSolicitud","agregarSolicitud","form","claveBusqueda","mostrarNuevaSolicitud","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/eiler/Documentos/Universidad/SegundoSemestre2024/Archivos/Proyecto1/app/FRONTEND/src/app/area-cajero/solicitud-tarjetas/solicitud-tarjetas.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { SolicitudesTarjetas } from 'src/app/Modelo/SolicitudesTarjetas';\nimport { TarjetasDescuento } from 'src/app/Modelo/TarjetasDescuento';\nimport { SolicitudesTarjetasService } from 'src/app/Service/solicitudes-tarjetas.service';\nimport { TarjetasService } from 'src/app/Service/tarjetas.service';\nimport { Usuario } from 'src/app/Modelo/Usuario';\nimport { data, error } from 'jquery';\nimport { NgFor } from '@angular/common';\nimport { NgForm } from '@angular/forms';\n@Component({\n  selector: 'app-solicitud-tarjetas',\n  templateUrl: './solicitud-tarjetas.component.html',\n  styleUrls: ['./solicitud-tarjetas.component.css']\n})\nexport class SolicitudTarjetasComponent {\n\n  constructor(private servicioSolicitud:SolicitudesTarjetasService,\n    private servicioTarjetas:TarjetasService\n  ){}\n\n  ngOnInit():void{\n    this.servicioSolicitud.getSolicitudesTarjetas(this.getRolDB()).subscribe(data=>{\n      this.solicitudes=data;\n      this.solicitudesT=data;\n      this.getTarjetasDescuento();\n    },error=>{\n      console.log(error)\n    })\n  }\n\n  getTarjetasDescuento(){\n    this.servicioTarjetas.getTarjetas(this.getRolDB()).subscribe(data=>{\n      this.tarjetas=data;\n      this.tarjetasT=data;\n    },error=>{\n      console.log(error)\n    })\n  }\n\n  idSolicitud!:number\n\n  tarjetas!:TarjetasDescuento[]\n  tarjetasT!:TarjetasDescuento[]\n  solicitudes!:SolicitudesTarjetas[]\n  solicitudesT!:SolicitudesTarjetas[]\n  mostrarAgregarNuevaSolicitud:boolean=false;\n\n  claveBusqueda!:string\n\n  searchSolicitud(clave:string){\n    this.solicitudes = clave === \"\" ? this.solicitudesT : this.buscarSolicitudes(clave, this.solicitudesT);\n\n  }\n\n  buscarSolicitudes(clave: string, st: SolicitudesTarjetas[]):SolicitudesTarjetas[]{\n    const claveNormalizada = clave.toLowerCase();\n    \n    return st.filter(s => {\n      return (\n        s.codigo.toString().toLowerCase().includes(claveNormalizada)||\n        s.n_cliente.toLowerCase().includes(claveNormalizada)\n      );\n    });\n  }\n\n  getRolDB(){\n    let stringUser = localStorage.getItem('usuario');\n    let usuario:Usuario = stringUser? JSON.parse(stringUser):null;\n    let rol = usuario? usuario.rol:0;\n    return rol;\n  }\n\n  searchTarjeta(clave: string) {\n    this.tarjetas = clave === \"\" ? this.tarjetasT : this.buscarTarjetas(clave, this.tarjetasT);\n  }\n  \n\n  buscarTarjetas(clave: string, tr: TarjetasDescuento[]): TarjetasDescuento[] {\n    const claveNormalizada = clave.toLowerCase();\n    \n    return tr.filter(t => {\n      return (\n        t.codigo.toString().toLowerCase().includes(claveNormalizada)||\n        t.tipo.toString().toLowerCase().includes(claveNormalizada)||\n        t.cliente.toString().toLowerCase().includes(claveNormalizada)||\n        t.n_cliente.toLowerCase().includes(claveNormalizada)||\n        t.total_puntos.toString().toLowerCase().includes(claveNormalizada)||\n        t.fecha_mod.toLowerCase().includes(claveNormalizada)\n      );\n    });\n  }\n\n  dejarDeMostrarNuevaSolicitud(nuevaSolicitudForm:NgForm){\n    nuevaSolicitudForm.resetForm();\n    this.mostrarAgregarNuevaSolicitud=false\n  }\n\n  agregarSolicitud(form:NgForm){\n    //agregar solicitud\n    this.claveBusqueda=\"\"\n    form.resetForm();\n  }\n\n  mostrarNuevaSolicitud(){\n    this.mostrarAgregarNuevaSolicitud=true;\n    this.claveBusqueda=\"\"\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}