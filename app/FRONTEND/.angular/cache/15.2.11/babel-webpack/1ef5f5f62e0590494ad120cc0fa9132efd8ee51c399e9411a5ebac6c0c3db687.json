{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet SolicitudesModificacionClienteComponent = class SolicitudesModificacionClienteComponent {\n  constructor() {\n    this.mostrarNuevaSolicitud = false;\n  }\n  guardarNuevaSolicitud(solicitudModificacionClienteForm) {\n    solicitudModificacionClienteForm.resetForm();\n  }\n  NuevaSolicitud() {\n    this.mostrarNuevaSolicitud = true;\n  }\n  getEstadoSolicitud(aprobacion) {\n    return aprobacion ? \"APROBADA\" : \"NO APROBADA\";\n  }\n  searchSolicitudes(clave) {\n    this.clientes = clave === \"\" ? this.clientesT : this.buscarClientes(clave, this.clientesT);\n  }\n  buscarClientes(clave, solicitudes) {\n    const claveNormalizada = clave.toLowerCase();\n    return solicitudes.filter(s => {\n      return s.id.toString().includes(claveNormalizada) || s.cliente.toString().includes(claveNormalizada) || s.n_cliente.toLowerCase().includes(claveNormalizada) || s.descripcion.toString().includes(claveNormalizada) || s.aprobacion.toString().includes(claveNormalizada);\n    });\n  }\n  searchClientes(clave) {\n    this.clientes = clave === \"\" ? this.clientesT : this.buscarClientes(clave, this.clientesT);\n  }\n  buscarClientes(clave, clientes) {\n    const claveNormalizada = clave.toLowerCase();\n    return clientes.filter(cliente => {\n      return cliente.identificacion.toString().includes(claveNormalizada) || cliente.nombre.toLowerCase().includes(claveNormalizada) || cliente.nit.toLowerCase().includes(claveNormalizada) || cliente.telefono.toString().includes(claveNormalizada);\n    });\n  }\n  getRolDB() {\n    let stringUser = localStorage.getItem('usuario');\n    let usuario = stringUser ? JSON.parse(stringUser) : null;\n    let rol = usuario ? usuario.rol : 0;\n    return rol;\n  }\n};\nSolicitudesModificacionClienteComponent = __decorate([Component({\n  selector: 'app-solicitudes-modificacion-cliente',\n  templateUrl: './solicitudes-modificacion-cliente.component.html',\n  styleUrls: ['./solicitudes-modificacion-cliente.component.css']\n})], SolicitudesModificacionClienteComponent);\nexport { SolicitudesModificacionClienteComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAUlC,IAAMC,uCAAuC,GAA7C,MAAMA,uCAAuC;EAA7CC;IAEL,0BAAqB,GAAS,KAAK;EAgErC;EAnDEC,qBAAqB,CAACC,gCAAuC;IAC3DA,gCAAgC,CAACC,SAAS,EAAE;EAC9C;EAEAC,cAAc;IACZ,IAAI,CAACC,qBAAqB,GAAC,IAAI;EACjC;EAEAC,kBAAkB,CAACC,UAAkB;IACnC,OAAOA,UAAU,GAAE,UAAU,GAAE,aAAa;EAC9C;EAEAC,iBAAiB,CAACC,KAAa;IAC7B,IAAI,CAACC,QAAQ,GAAGD,KAAK,KAAK,EAAE,GAAG,IAAI,CAACE,SAAS,GAAG,IAAI,CAACC,cAAc,CAACH,KAAK,EAAE,IAAI,CAACE,SAAS,CAAC;EAC5F;EACAC,cAAc,CAACH,KAAa,EAAEI,WAA6C;IACzE,MAAMC,gBAAgB,GAAGL,KAAK,CAACM,WAAW,EAAE;IAE5C,OAAOF,WAAW,CAACG,MAAM,CAACC,CAAC,IAAG;MAC5B,OACEA,CAAC,CAACC,EAAE,CAACC,QAAQ,EAAE,CAACC,QAAQ,CAACN,gBAAgB,CAAC,IAC1CG,CAAC,CAACI,OAAO,CAACF,QAAQ,EAAE,CAACC,QAAQ,CAACN,gBAAgB,CAAC,IAC/CG,CAAC,CAACK,SAAS,CAACP,WAAW,EAAE,CAACK,QAAQ,CAACN,gBAAgB,CAAC,IACpDG,CAAC,CAACM,WAAW,CAACJ,QAAQ,EAAE,CAACC,QAAQ,CAACN,gBAAgB,CAAC,IACnDG,CAAC,CAACV,UAAU,CAACY,QAAQ,EAAE,CAACC,QAAQ,CAACN,gBAAgB,CAAC;IAEtD,CAAC,CAAC;EACJ;EAEAU,cAAc,CAACf,KAAa;IAC1B,IAAI,CAACC,QAAQ,GAAGD,KAAK,KAAK,EAAE,GAAG,IAAI,CAACE,SAAS,GAAG,IAAI,CAACC,cAAc,CAACH,KAAK,EAAE,IAAI,CAACE,SAAS,CAAC;EAC5F;EACAC,cAAc,CAACH,KAAa,EAAEC,QAAmB;IAC/C,MAAMI,gBAAgB,GAAGL,KAAK,CAACM,WAAW,EAAE;IAE5C,OAAOL,QAAQ,CAACM,MAAM,CAACK,OAAO,IAAG;MAC/B,OACEA,OAAO,CAACI,cAAc,CAACN,QAAQ,EAAE,CAACC,QAAQ,CAACN,gBAAgB,CAAC,IAC5DO,OAAO,CAACK,MAAM,CAACX,WAAW,EAAE,CAACK,QAAQ,CAACN,gBAAgB,CAAC,IACvDO,OAAO,CAACM,GAAG,CAACZ,WAAW,EAAE,CAACK,QAAQ,CAACN,gBAAgB,CAAC,IACpDO,OAAO,CAACO,QAAQ,CAACT,QAAQ,EAAE,CAACC,QAAQ,CAACN,gBAAgB,CAAC;IAE1D,CAAC,CAAC;EACJ;EAEAe,QAAQ;IACN,IAAIC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;IAChD,IAAIC,OAAO,GAAWH,UAAU,GAAEI,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC,GAAC,IAAI;IAC7D,IAAIM,GAAG,GAAGH,OAAO,GAAEA,OAAO,CAACG,GAAG,GAAC,CAAC;IAChC,OAAOA,GAAG;EACZ;CACD;AAlEYrC,uCAAuC,eALnDD,SAAS,CAAC;EACTuC,QAAQ,EAAE,sCAAsC;EAChDC,WAAW,EAAE,mDAAmD;EAChEC,SAAS,EAAE,CAAC,kDAAkD;CAC/D,CAAC,GACWxC,uCAAuC,CAkEnD;SAlEYA,uCAAuC","names":["Component","SolicitudesModificacionClienteComponent","constructor","guardarNuevaSolicitud","solicitudModificacionClienteForm","resetForm","NuevaSolicitud","mostrarNuevaSolicitud","getEstadoSolicitud","aprobacion","searchSolicitudes","clave","clientes","clientesT","buscarClientes","solicitudes","claveNormalizada","toLowerCase","filter","s","id","toString","includes","cliente","n_cliente","descripcion","searchClientes","identificacion","nombre","nit","telefono","getRolDB","stringUser","localStorage","getItem","usuario","JSON","parse","rol","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/eiler/Documentos/Universidad/SegundoSemestre2024/Archivos/Proyecto1/app/FRONTEND/src/app/area-cajero/solicitudes-modificacion-cliente/solicitudes-modificacion-cliente.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Cliente } from 'src/app/Modelo/Cliente';\nimport { SolicitudesModificacionCliente } from 'src/app/Modelo/SolicitudesModificacionCliente';\nimport { Usuario } from 'src/app/Modelo/Usuario';\n@Component({\n  selector: 'app-solicitudes-modificacion-cliente',\n  templateUrl: './solicitudes-modificacion-cliente.component.html',\n  styleUrls: ['./solicitudes-modificacion-cliente.component.css']\n})\nexport class SolicitudesModificacionClienteComponent {\n\n  mostrarNuevaSolicitud:boolean=false;\n\n  solicitudes!:SolicitudesModificacionCliente[]\n  solicitudesT!:SolicitudesModificacionCliente[]\n  claveBusqueda!:string\n  claveBusquedaSolicitud!:string\n  clientes!:Cliente[]\n  clientesT!:Cliente[]\n\n  cliente!:number\n  descripcion!:string\n\n\n  guardarNuevaSolicitud(solicitudModificacionClienteForm:NgForm){\n    solicitudModificacionClienteForm.resetForm();\n  }\n\n  NuevaSolicitud(){\n    this.mostrarNuevaSolicitud=true\n  }\n\n  getEstadoSolicitud(aprobacion:boolean):string{\n    return aprobacion? \"APROBADA\": \"NO APROBADA\";\n  }\n\n  searchSolicitudes(clave: string) {\n    this.clientes = clave === \"\" ? this.clientesT : this.buscarClientes(clave, this.clientesT);\n  }\n  buscarClientes(clave: string, solicitudes: SolicitudesModificacionCliente[]): SolicitudesModificacionCliente[] {\n    const claveNormalizada = clave.toLowerCase();\n    \n    return solicitudes.filter(s => {\n      return (\n        s.id.toString().includes(claveNormalizada) || \n        s.cliente.toString().includes(claveNormalizada)||\n        s.n_cliente.toLowerCase().includes(claveNormalizada)||\n        s.descripcion.toString().includes(claveNormalizada)||\n        s.aprobacion.toString().includes(claveNormalizada)\n      );\n    });\n  }\n\n  searchClientes(clave: string) {\n    this.clientes = clave === \"\" ? this.clientesT : this.buscarClientes(clave, this.clientesT);\n  }\n  buscarClientes(clave: string, clientes: Cliente[]): Cliente[] {\n    const claveNormalizada = clave.toLowerCase();\n    \n    return clientes.filter(cliente => {\n      return (\n        cliente.identificacion.toString().includes(claveNormalizada) || \n        cliente.nombre.toLowerCase().includes(claveNormalizada)||\n        cliente.nit.toLowerCase().includes(claveNormalizada)||\n        cliente.telefono.toString().includes(claveNormalizada)\n      );\n    });\n  }\n\n  getRolDB(){\n    let stringUser = localStorage.getItem('usuario');\n    let usuario:Usuario = stringUser? JSON.parse(stringUser):null;\n    let rol = usuario? usuario.rol:0;\n    return rol;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}