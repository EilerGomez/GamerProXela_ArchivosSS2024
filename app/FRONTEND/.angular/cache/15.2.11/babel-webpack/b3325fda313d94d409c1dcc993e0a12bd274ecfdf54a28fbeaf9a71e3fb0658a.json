{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { TarjetasDescuento } from 'src/app/Modelo/TarjetasDescuento';\nlet SolicitudTarjetasAdminComponent = class SolicitudTarjetasAdminComponent {\n  constructor(servicioSolicitud, servicioTarjetas) {\n    this.servicioSolicitud = servicioSolicitud;\n    this.servicioTarjetas = servicioTarjetas;\n    this.mostrarInfoTarjeta = false;\n  }\n  ngOnInit() {\n    this.servicioSolicitud.getSolicitudesTarjetas(this.getRolDB()).subscribe(data => {\n      this.solicitudes = data;\n      this.solicitudesT = data;\n      this.getTarjetasDescuento();\n    }, error => {\n      console.log(error);\n    });\n  }\n  getTipo(t) {\n    switch (t) {\n      case \"C\":\n        return \"Comun\";\n        break;\n      case \"O\":\n        return \"Oro\";\n        break;\n      case \"P\":\n        return \"Platino\";\n        break;\n      default:\n        return \"Diamante\";\n        break;\n    }\n  }\n  getTarjetasDescuento() {\n    this.servicioTarjetas.getTarjetas(this.getRolDB()).subscribe(data => {\n      this.tarjetas = data;\n    }, error => {\n      console.log(error);\n    });\n  }\n  searchSolicitud(clave) {\n    this.solicitudes = clave === \"\" ? this.solicitudesT : this.buscarSolicitudes(clave, this.solicitudesT);\n  }\n  buscarSolicitudes(clave, st) {\n    const claveNormalizada = clave.toLowerCase();\n    return st.filter(s => {\n      return s.codigo.toString().toLowerCase().includes(claveNormalizada) || s.n_cliente.toLowerCase().includes(claveNormalizada);\n    });\n  }\n  getRolDB() {\n    let stringUser = localStorage.getItem('usuario');\n    let usuario = stringUser ? JSON.parse(stringUser) : null;\n    let rol = usuario ? usuario.rol : 0;\n    return rol;\n  }\n  aceptarSolicitud(s) {\n    //logica para ver si aprueba el cambio o no\n    this.tarjetaDetalles = this.getTarjetaDescuento(this.tarjetas, s.cliente);\n    let solicitud = s.codigo;\n    let cliente = this.tarjetaDetalles.cliente;\n    let motivo = s.motivo;\n    let fechamod = this.tarjetaDetalles.fecha_mod.substring(0, 10);\n    this.servicioSolicitud.cambiarTipoTarjeta(this.getRolDB(), solicitud, cliente, motivo, fechamod).subscribe(data => {\n      if (data.cambiartipotarjeta == \"RECHAZADA\") {\n        alert(\"La tarjeta no puede ser cambiada debido a que el cliente: \" + s.n_cliente + \", no cumple con el minimo de compras para el cambio !!!\");\n      } else {\n        alert(\"LA TARJETA HA SIDO CAMBIADA A\" + this.getTipo(s.motivo.substring(1, 2)));\n      }\n    }, error => {\n      console.log(error);\n    });\n  }\n  verDetalles(s) {\n    this.tarjetaDetalles = this.getTarjetaDescuento(this.tarjetas, s.cliente);\n    this.mostrarInfoTarjeta = true;\n  }\n  getTarjetaDescuento(td, idCliente) {\n    let tr = new TarjetasDescuento(0, \"\", 12, \"\", 12, 2, 2, \"\");\n    td.forEach(t => {\n      if (t.cliente == idCliente) {\n        tr = t;\n        return;\n      }\n    });\n    return tr;\n  }\n  getPuntos(p) {\n    return Math.floor(p);\n  }\n};\nSolicitudTarjetasAdminComponent = __decorate([Component({\n  selector: 'app-solicitud-tarjetas-admin',\n  templateUrl: './solicitud-tarjetas-admin.component.html',\n  styleUrls: ['./solicitud-tarjetas-admin.component.css']\n})], SolicitudTarjetasAdminComponent);\nexport { SolicitudTarjetasAdminComponent };","map":{"version":3,"mappings":"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","names":["Component","TarjetasDescuento","SolicitudTarjetasAdminComponent","constructor","servicioSolicitud","servicioTarjetas","ngOnInit","getSolicitudesTarjetas","getRolDB","subscribe","data","solicitudes","solicitudesT","getTarjetasDescuento","error","console","log","getTipo","t","getTarjetas","tarjetas","searchSolicitud","clave","buscarSolicitudes","st","claveNormalizada","toLowerCase","filter","s","codigo","toString","includes","n_cliente","stringUser","localStorage","getItem","usuario","JSON","parse","rol","aceptarSolicitud","tarjetaDetalles","getTarjetaDescuento","cliente","solicitud","motivo","fechamod","fecha_mod","substring","cambiarTipoTarjeta","cambiartipotarjeta","alert","verDetalles","mostrarInfoTarjeta","td","idCliente","tr","forEach","getPuntos","p","Math","floor","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/eiler/Documentos/Universidad/SegundoSemestre2024/Archivos/Proyecto1/app/FRONTEND/src/app/area-administrador/solicitud-tarjetas-admin/solicitud-tarjetas-admin.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { SolicitudesTarjetas } from 'src/app/Modelo/SolicitudesTarjetas';\nimport { SolicitudesTarjetasService } from 'src/app/Service/solicitudes-tarjetas.service';\nimport { TarjetasService } from 'src/app/Service/tarjetas.service';\nimport { TarjetasDescuento } from 'src/app/Modelo/TarjetasDescuento';\nimport { Usuario } from 'src/app/Modelo/Usuario';\nimport { data, error } from 'jquery';\n\n@Component({\n  selector: 'app-solicitud-tarjetas-admin',\n  templateUrl: './solicitud-tarjetas-admin.component.html',\n  styleUrls: ['./solicitud-tarjetas-admin.component.css']\n})\nexport class SolicitudTarjetasAdminComponent {\n\n  constructor(private servicioSolicitud:SolicitudesTarjetasService,\n    private servicioTarjetas:TarjetasService\n  ){}\n\n  mostrarInfoTarjeta:boolean=false\n\n  solicitudes!:SolicitudesTarjetas[]\n  solicitudesT!:SolicitudesTarjetas[]\n  claveBusqueda!:string\n  tarjetas!:TarjetasDescuento[]\n  tarjetaDetalles!:TarjetasDescuento\n\n  ngOnInit():void{\n    this.servicioSolicitud.getSolicitudesTarjetas(this.getRolDB()).subscribe(data=>{\n      this.solicitudes=data;\n      this.solicitudesT=data;\n      this.getTarjetasDescuento();\n    },error=>{\n      console.log(error)\n    })\n  }\n\n\n  getTipo(t:string):string{\n    switch (t) {\n      case \"C\":\n        return \"Comun\";\n        break;\n      case \"O\": return \"Oro\"\n        break\n      case \"P\": return \"Platino\"\n        break\n      default:\n        return \"Diamante\"\n        break;\n    }\n  }\n\n\n\n  getTarjetasDescuento(){\n    this.servicioTarjetas.getTarjetas(this.getRolDB()).subscribe(data=>{\n      this.tarjetas=data;\n    },error=>{\n      console.log(error)\n    })\n  }\n  searchSolicitud(clave:string){\n    this.solicitudes = clave === \"\" ? this.solicitudesT : this.buscarSolicitudes(clave, this.solicitudesT);\n\n  }\n\n  buscarSolicitudes(clave: string, st: SolicitudesTarjetas[]):SolicitudesTarjetas[]{\n    const claveNormalizada = clave.toLowerCase();\n    \n    return st.filter(s => {\n      return (\n        s.codigo.toString().toLowerCase().includes(claveNormalizada)||\n        s.n_cliente.toLowerCase().includes(claveNormalizada)\n      );\n    });\n  }\n\n  getRolDB(){\n    let stringUser = localStorage.getItem('usuario');\n    let usuario:Usuario = stringUser? JSON.parse(stringUser):null;\n    let rol = usuario? usuario.rol:0;\n    return rol;\n  }\n\n  aceptarSolicitud(s:SolicitudesTarjetas){\n    //logica para ver si aprueba el cambio o no\n    this.tarjetaDetalles=this.getTarjetaDescuento(this.tarjetas,s.cliente);\n    let solicitud:number = s.codigo;\n    let cliente:number = this.tarjetaDetalles.cliente;\n    let motivo:string = s.motivo;\n    let fechamod:string= (this.tarjetaDetalles.fecha_mod).substring(0,10);\n    this.servicioSolicitud.cambiarTipoTarjeta(this.getRolDB(),solicitud,cliente,motivo,fechamod).subscribe(data=>{\n      if(data.cambiartipotarjeta==\"RECHAZADA\"){\n        alert(\"La tarjeta no puede ser cambiada debido a que el cliente: \" + s.n_cliente + \", no cumple con el minimo de compras para el cambio !!!\");\n      }else{\n        alert(\"LA TARJETA HA SIDO CAMBIADA A\" +  this.getTipo(s.motivo.substring(1,2)));\n      }\n    }, error=>{\n      console.log(error)\n    })\n  }\n\n  verDetalles(s:SolicitudesTarjetas){\n    this.tarjetaDetalles=this.getTarjetaDescuento(this.tarjetas,s.cliente);\n    this.mostrarInfoTarjeta=true\n  }\n\n  getTarjetaDescuento(td:TarjetasDescuento[], idCliente:number):TarjetasDescuento{\n    let tr = new TarjetasDescuento(0,\"\",12,\"\",12,2,2,\"\");\n    td.forEach(t => {\n      if(t.cliente==idCliente){\n        tr=t;\n        return;\n      }\n    });\n    return tr;\n  }\n\n  getPuntos(p:number):number{\n    return Math.floor(p);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}